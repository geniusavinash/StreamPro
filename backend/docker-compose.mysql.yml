version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: camera-streaming-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: camera_streaming_db
      MYSQL_USER: camera_streaming_user
      MYSQL_PASSWORD: secure_password_123
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/database/migrations/001-initial-schema.sql:/docker-entrypoint-initdb.d/001-initial-schema.sql:ro
      - ./mysql/conf.d:/etc/mysql/conf.d:ro
    networks:
      - camera-streaming-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot123"]
      timeout: 20s
      retries: 10

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: camera-streaming-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - camera-streaming-network
    command: redis-server --appendonly yes --requirepass redis123
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 3s
      retries: 5

  # phpMyAdmin (Optional - for database management)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: camera-streaming-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: camera_streaming_user
      PMA_PASSWORD: secure_password_123
      MYSQL_ROOT_PASSWORD: root123
    ports:
      - "8080:80"
    networks:
      - camera-streaming-network
    depends_on:
      mysql:
        condition: service_healthy

  # Redis Commander (Optional - for Redis management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: camera-streaming-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis123
    ports:
      - "8081:8081"
    networks:
      - camera-streaming-network
    depends_on:
      - redis

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  camera-streaming-network:
    driver: bridge